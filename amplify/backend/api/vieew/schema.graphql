# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User @model { 
  id: ID!
  firstName: String
  lastName: String
  email: String!
  profilePhoto: String
  bio: String
  viewerId: ID @index(name: "viewerId")
  brands: [Brand] @manyToMany(relationName: "BrandAdmins")
  viewers: [Viewer] @manyToMany(relationName: "ViewerAdmins")
  viewer: Viewer @hasOne(fields: ["viewerId"])
  posts: [Post] @hasMany(indexName: "byAuthor", fields: ["id"])
  services: [Service] @hasMany(indexName: "byAuthor", fields: ["id"])
  updatedAt: String
  createdAt: String
}

type Viewer @model {
  id: ID!
  name: String!
  description: String!
  ownerId: ID! @index(name: "ownerId")
  owner: User @belongsTo(fields: ["ownerId"])
  admins: [User] @manyToMany(relationName: "ViewerAdmins")
  posts: [Post] @hasMany(indexName: "byOwnerViewer", fields: ["id"])
  services: [Service] @hasMany(indexName: "byOwnerViewer", fields: ["id"])
  createdAt: String
  updatedAt: String

}

type Brand @model {
  id: ID!
  name: String!
  logo: String
  description: String!
  ownerId: ID! @index(name: "byBrand")
  admins: [User] @manyToMany(relationName: "BrandAdmins")
  posts: [Post] @hasMany(indexName: "byOwnerBrand", fields: ["id"])
  createdAt: String
  updatedAt: String
}

type Post @model {
  id: ID!
  title: String!
  content: String!
  authorId: ID! @index(name: "byAuthor")
  author: User @belongsTo(fields: ["authorId"])
  brand: Brand @belongsTo
  brandID: ID @index(name: "byOwnerBrand")
  viewerID: ID @index(name: "byOwnerViewer")
  viewer: Viewer @belongsTo#(fields: ["viewerId"])
  createdAt: String
  updatedAt: String
}

type Service @model {
  id: ID!
  title: String!
  content: String!
  authorId: ID! @index(name: "byAuthor")
  author: User @belongsTo(fields: ["authorId"])
  viewerID: ID @index(name: "byOwnerViewer")
  viewer: Viewer @belongsTo #(fields: ["viewerId"])
  createdAt: String
  updatedAt: String
}